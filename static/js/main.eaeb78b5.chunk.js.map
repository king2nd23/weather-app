{"version":3,"sources":["CurrentWeather.js","index.js"],"names":["CurrentWeather","props","react_default","a","createElement","Fragment","className","style","display","verticalAlign","weather_icons_react","size","color","fontSize","listStyle","textAlign","App","state","lat","long","errormsg","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","error","message","getWeatherData","apiCall","concat","fetch","then","res","json","response","dailyString","JSON","stringify","daily","data","iconArray","parse","map","item","icon","currentString","currently","currentParsed","console","log","catch","setTimeout","src_CurrentWeather","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"uOAuCeA,SAhCQ,SAAAC,GACrB,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAW,gBAAgBC,MAAQ,CAACC,QAAS,iBAChDN,EAAAC,EAAAC,cAAA,OAAKE,UAAW,OAAOC,MAAQ,CAACC,QAAS,eAAgBC,cAAe,WACtEP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAcC,KAAM,IAAKC,MAAM,UAEjCV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYC,MAAQ,CAACC,QAAS,eAAgBC,cAAe,WAC1EP,EAAAC,EAAAC,cAAA,KAAGE,UAAU,cAAcC,MAAQ,CAACM,SAAU,SAA9C,UACAX,EAAAC,EAAAC,cAAA,KAAGE,UAAW,YAAYC,MAAQ,CAACM,SAAU,WAA7C,sBAGJX,EAAAC,EAAAC,cAAA,OAAKE,UAAW,wBAAwBC,MAAQ,CAACC,QAAS,eAAgBC,cAAe,WACvFP,EAAAC,EAAAC,cAAA,MAAIG,MAAQ,CAACO,UAAW,SACtBZ,EAAAC,EAAAC,cAAA,MAAIE,UAAW,mBAAmBC,MAAS,CAACM,SAAU,SAAUE,UAAW,WACzEb,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,KAAM,GAAIC,MAAM,SACzBV,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,MAAIE,UAAW,iBAAiBC,MAAS,CAACM,SAAU,WAClDX,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAYC,KAAM,GAAIC,MAAM,SAC5BV,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAAA,MAAIE,UAAW,kBAAkBC,MAAS,CAACM,SAAU,WACnDX,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAaC,KAAM,GAAIC,MAAM,SAC7BV,EAAAC,EAAAC,cAAA,yBC1BJY,oNACJC,MAAQ,CAAEC,IAAK,KAAMC,KAAM,KAAMC,SAAU,uFAEvB,IAAAC,EAAAC,KAEhBC,OAAOC,UAAUC,YAAYC,mBAC3B,SAAAC,GACEN,EAAKO,SAAS,CACZV,IAAKS,EAASE,OAAOC,SACrBX,KAAMQ,EAASE,OAAOE,aAG1B,SAAAC,GAAK,OAAIX,EAAKO,SAAS,CAAER,SAAUY,EAAMC,YAK7C,IAAMC,EAAiB,WACrB,IAAIC,EAAO,qEAAAC,OACTf,EAAKJ,MAAMC,IADF,KAAAkB,OAEPf,EAAKJ,MAAME,MACfkB,MAAMF,GACHG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAEJ,IAAIC,EAAcC,KAAKC,UAAUH,EAASI,MAAMC,MAE5CC,EADcJ,KAAKK,MAAMN,GACDO,IAAI,SAACC,GAC/B,OAAOA,EAAKC,OAGVC,EAAgBT,KAAKC,UAAUH,EAASY,WACxCC,EAAgBX,KAAKK,MAAMI,GAI/BG,QAAQC,IAAIT,GACZQ,QAAQC,IAAIf,GACZc,QAAQC,IAAIF,KAEbG,MAAM,SAAAzB,GAAK,OAAIuB,QAAQC,IAAIxB,KAC9BuB,QAAQC,IAAIrB,IAIZuB,WAAW,WACTxB,KACC,sCAOL,OACEhC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuD,EAAD,CAAgBR,KAAK,aAxDXS,IAAMC,YA8DxBC,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.eaeb78b5.chunk.js","sourcesContent":["import React from \"react\";\nimport { WiDaySunny, WiNightClear, WiRain, WiSnow, WiSleet, WiStrongWind, WiFog,\nWiCloudy, WiDayCloudy, WiNightAltPartlyCloudy, WiUmbrella,WiRaindrops, WiWindy }\nfrom 'weather-icons-react';\nimport MainCSS from \"./main.css\";\n\n\nconst CurrentWeather = props => {\n  return (\n    <React.Fragment>\n    <div className= \"todaysDetails\" style={ {display: \"inline-block\"} }>\n      <div className= \"icon\" style={ {display: \"inline-block\", verticalAlign: \"middle\"} }>\n        <WiStrongWind size={200} color='#000' />\n      </div>\n      <div className=\"dailyTemp\" style={ {display: \"inline-block\", verticalAlign: \"middle\"} }>\n        <p className=\"currentTemp\" style={ {fontSize: \"9rem\"} }>99°</p>\n        <p className= \"hiLo temp\" style={ {fontSize: \"1.5rem\"} }>100° / 78°</p>\n      </div>\n    </div>\n    <div className= \"currentWeatherDetails\" style={ {display: \"inline-block\", verticalAlign: \"middle\"} }>\n      <ul style={ {listStyle: \"none\"} }>\n        <li className= \"currentWindSpeed\" style= { {fontSize: \"1.5rem\", textAlign: \"center\"} }>\n          <WiWindy size={40} color='#000' />\n          <span>8 mph</span>\n        </li>\n        <li className= \"chanceOfPrecip\" style= { {fontSize: \"1.5rem\"} }>\n          <WiUmbrella size={40} color='#000' />\n          <span>0%</span>\n        </li>\n        <li className= \"currentHumidity\" style= { {fontSize: \"1.5rem\"} }>\n          <WiRaindrops size={40} color='#000' />\n          <span>30%</span>\n        </li>\n      </ul>\n    </div>\n  </React.Fragment>\n\n  );\n};\nexport default CurrentWeather;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport WeatherIcons from 'react-weathericons';\n\nclass App extends React.Component {\n  state = { lat: null, long: null, errormsg: \"\" };\n\n  componentDidMount() {\n    const getPosition = () => {\n      window.navigator.geolocation.getCurrentPosition(\n        position => {\n          this.setState({\n            lat: position.coords.latitude,\n            long: position.coords.longitude\n          });\n        },\n        error => this.setState({ errormsg: error.message })\n      );\n    };\n    getPosition();\n\n    const getWeatherData = () => {\n      let apiCall = `https://api.darksky.net/forecast/c2f9808ca1a73ccc2367f463c969facc/${\n        this.state.lat\n      },${this.state.long}`;\n      fetch(apiCall)\n        .then(res => res.json())\n        .then(response => {\n          //info for weekly weather forecase\n          let dailyString = JSON.stringify(response.daily.data);\n          let dailyParsed = JSON.parse(dailyString);\n          let iconArray = dailyParsed.map((item) => {\n            return item.icon;\n          });\n          //info for current weather conditions\n          let currentString = JSON.stringify(response.currently);\n          let currentParsed = JSON.parse(currentString);\n          // let currentIcon = currentParsed.map((item) => {\n          //   return item.icon;\n          // })\n          console.log(iconArray);\n          console.log(response);\n          console.log(currentParsed);\n        })\n        .catch(error => console.log(error));\n      console.log(apiCall);\n    };\n\n    function getWeather() {\n      setTimeout(() => {\n        getWeatherData();\n      }, 4000);\n    }\n    getWeather();\n  }\n\n\n  render() {\n    return (\n      <div>\n        <CurrentWeather icon=\"\"/>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}