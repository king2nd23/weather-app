{"version":3,"sources":["CurrentWeather.js","index.js"],"names":["CurrentWeather","props","react_default","a","createElement","Fragment","className","style","display","weather_icons_react","size","color","App","state","lat","long","errormsg","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","error","message","getWeatherData","apiCall","concat","fetch","then","res","json","response","string","JSON","stringify","daily","data","parsed","parse","iconArray","map","item","icon","console","log","catch","setTimeout","src_CurrentWeather","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"kNAiCeA,EAzBQ,SAAAC,GACrB,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAW,gBAAgBC,MAAQ,CAACC,QAAS,iBAChDN,EAAAC,EAAAC,cAAA,OAAKE,UAAW,QACdJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAcC,KAAM,GAAIC,MAAM,UAEhCT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAb,UACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAW,aAAd,oBAGJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAW,wBAAwBC,MAAQ,CAACC,QAAS,iBACxDN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAW,oBACbJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,KAAM,GAAIC,MAAM,UAE3BT,EAAAC,EAAAC,cAAA,MAAIE,UAAW,mBACfJ,EAAAC,EAAAC,cAAA,MAAIE,UAAW,wBCrBjBM,oNACJC,MAAQ,CAAEC,IAAK,KAAMC,KAAM,KAAMC,SAAU,uFAEvB,IAAAC,EAAAC,KAEhBC,OAAOC,UAAUC,YAAYC,mBAC3B,SAAAC,GACEN,EAAKO,SAAS,CACZV,IAAKS,EAASE,OAAOC,SACrBX,KAAMQ,EAASE,OAAOE,aAG1B,SAAAC,GAAK,OAAIX,EAAKO,SAAS,CAAER,SAAUY,EAAMC,YAK7C,IAAMC,EAAiB,WACrB,IAAIC,EAAO,qEAAAC,OACTf,EAAKJ,MAAMC,IADF,KAAAkB,OAEPf,EAAKJ,MAAME,MACfkB,MAAMF,GACHG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJ,IAAIC,EAASC,KAAKC,UAAUH,EAASI,MAAMC,MACvCC,EAASJ,KAAKK,MAAMN,GACpBO,EAAYF,EAAOG,IAAI,SAACC,GAC1B,OAAOA,EAAKC,OAEdC,QAAQC,IAAIL,GACZI,QAAQC,IAAIP,GACZM,QAAQC,IAAIb,KAEbc,MAAM,SAAAvB,GAAK,OAAIqB,QAAQC,IAAItB,KAC9BqB,QAAQC,IAAInB,IAIZqB,WAAW,WACTtB,KACC,sCAOL,OACE5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiD,EAAD,CAAgBL,KAAK,aAjDXM,IAAMC,YAuDxBC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.cec8535e.chunk.js","sourcesContent":["import React from \"react\";\nimport { WiDaySunny, WiNightClear, WiRain, WiSnow, WiSleet, WiStrongWind, WiFog,\n   WiCloudy, WiDayCloudy, WiNightAltPartlyCloudy, WiUmbrella,\n WiRaindrops, WiWindy } from 'weather-icons-react';\n\n\n\n\nconst CurrentWeather = props => {\n  return (\n    <React.Fragment>\n    <div className= \"todaysDetails\" style={ {display: \"inline-block\"} }>\n      <div className= \"icon\">\n        <WiStrongWind size={24} color='#000' />\n      </div>\n      <div className=\"dailyTemp\">\n        <p className=\"currentTemp\">99°</p>\n        <p className= \"hiLo temp\">100°/78°</p>\n      </div>\n    </div>\n    <div className= \"currentWeatherDetails\" style={ {display: \"inline-block\"} }>\n      <ul>\n        <li className= \"currentWindSpeed\">\n          <WiWindy size={24} color='#000' />\n        </li>\n        <li className= \"chanceOfPrecip\"></li>\n        <li className= \"currentHumidity\"></li>\n      </ul>\n    </div>\n  </React.Fragment>\n\n  );\n};\nexport default CurrentWeather;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CurrentWeather from \"./CurrentWeather\";\nimport WeatherIcons from 'react-weathericons';\n\nclass App extends React.Component {\n  state = { lat: null, long: null, errormsg: \"\" };\n\n  componentDidMount() {\n    const getPosition = () => {\n      window.navigator.geolocation.getCurrentPosition(\n        position => {\n          this.setState({\n            lat: position.coords.latitude,\n            long: position.coords.longitude\n          });\n        },\n        error => this.setState({ errormsg: error.message })\n      );\n    };\n    getPosition();\n\n    const getWeatherData = () => {\n      let apiCall = `https://api.darksky.net/forecast/c2f9808ca1a73ccc2367f463c969facc/${\n        this.state.lat\n      },${this.state.long}`;\n      fetch(apiCall)\n        .then(res => res.json())\n        .then(response => {\n          let string = JSON.stringify(response.daily.data);\n          let parsed = JSON.parse(string);\n          let iconArray = parsed.map((item) => {\n            return item.icon;\n          });\n          console.log(iconArray);\n          console.log(parsed);\n          console.log(response);\n        })\n        .catch(error => console.log(error));\n      console.log(apiCall);\n    };\n\n    function getWeather() {\n      setTimeout(() => {\n        getWeatherData();\n      }, 4000);\n    }\n    getWeather();\n  }\n\n\n  render() {\n    return (\n      <div>\n        <CurrentWeather icon=\"\"/>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}